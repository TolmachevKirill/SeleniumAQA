{"name": "test_bank_operations", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=124.0.6367.201); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF76B411562+60802]\n\t(No symbol) [0x00007FF76B38AC62]\n\t(No symbol) [0x00007FF76B247CE4]\n\t(No symbol) [0x00007FF76B24DE26]\n\t(No symbol) [0x00007FF76B2501DB]\n\t(No symbol) [0x00007FF76B250280]\n\t(No symbol) [0x00007FF76B298D14]\n\t(No symbol) [0x00007FF76B28AD46]\n\t(No symbol) [0x00007FF76B2BAB7A]\n\t(No symbol) [0x00007FF76B28A7C6]\n\t(No symbol) [0x00007FF76B2BAD90]\n\t(No symbol) [0x00007FF76B2DA224]\n\t(No symbol) [0x00007FF76B2BA923]\n\t(No symbol) [0x00007FF76B288FEC]\n\t(No symbol) [0x00007FF76B289C21]\n\tGetHandleVerifier [0x00007FF76B7141FD+3217949]\n\tGetHandleVerifier [0x00007FF76B756197+3488183]\n\tGetHandleVerifier [0x00007FF76B74F11F+3459391]\n\tGetHandleVerifier [0x00007FF76B4CB926+823622]\n\t(No symbol) [0x00007FF76B395FFF]\n\t(No symbol) [0x00007FF76B390F24]\n\t(No symbol) [0x00007FF76B3910B2]\n\t(No symbol) [0x00007FF76B381904]\n\tBaseThreadInitThunk [0x00007FFB60BE7344+20]\n\tRtlUserThreadStart [0x00007FFB62BC26B1+33]", "trace": "self = <tests.test_bank_operations.TestBankOperations object at 0x000002014F524710>\nsetup_pages = (<pages.login_page.LoginPage object at 0x000002014F41DCD0>, <pages.account_page.AccountPage object at 0x000002014D0419D0>, <pages.transactions_page.TransactionsPage object at 0x000002014F524950>)\n\n    def test_bank_operations(self, setup_pages):\n        login_page, account_page, transactions_page = setup_pages\n    \n        # Авторизация пользователя \"Harry Potter\"\n        login_page.login_as_user(\"Harry Potter\")\n    \n        # Вычисление N-го числа Фибоначчи\n        fib_number = calculate_fibonacci(date.today().day + 1)\n    \n        # Пополнение счета на сумму, равную N-му числу Фибоначчи\n        account_page.deposit(fib_number)\n    \n        # Списание со счета на ту же сумму\n>       account_page.withdraw(fib_number)\n\ntest_bank_operations.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\account_page.py:33: in withdraw\n    self.click_element(self.submit_button)\n..\\pages\\base_page.py:41: in click_element\n    WebDriverWait(self.driver, self.timeout).until(EC.element_to_be_clickable(locator)).click()\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002014C566660>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...07FF76B381904]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB60BE7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB62BC26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=124.0.6367.201); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF76B411562+60802]\nE       \t(No symbol) [0x00007FF76B38AC62]\nE       \t(No symbol) [0x00007FF76B247CE4]\nE       \t(No symbol) [0x00007FF76B24DE26]\nE       \t(No symbol) [0x00007FF76B2501DB]\nE       \t(No symbol) [0x00007FF76B250280]\nE       \t(No symbol) [0x00007FF76B298D14]\nE       \t(No symbol) [0x00007FF76B28AD46]\nE       \t(No symbol) [0x00007FF76B2BAB7A]\nE       \t(No symbol) [0x00007FF76B28A7C6]\nE       \t(No symbol) [0x00007FF76B2BAD90]\nE       \t(No symbol) [0x00007FF76B2DA224]\nE       \t(No symbol) [0x00007FF76B2BA923]\nE       \t(No symbol) [0x00007FF76B288FEC]\nE       \t(No symbol) [0x00007FF76B289C21]\nE       \tGetHandleVerifier [0x00007FF76B7141FD+3217949]\nE       \tGetHandleVerifier [0x00007FF76B756197+3488183]\nE       \tGetHandleVerifier [0x00007FF76B74F11F+3459391]\nE       \tGetHandleVerifier [0x00007FF76B4CB926+823622]\nE       \t(No symbol) [0x00007FF76B395FFF]\nE       \t(No symbol) [0x00007FF76B390F24]\nE       \t(No symbol) [0x00007FF76B3910B2]\nE       \t(No symbol) [0x00007FF76B381904]\nE       \tBaseThreadInitThunk [0x00007FFB60BE7344+20]\nE       \tRtlUserThreadStart [0x00007FFB62BC26B1+33]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "start": 1715352491260, "stop": 1715352500617, "uuid": "9cec0406-d2ac-4cb7-8524-7d83ebdd5db5", "historyId": "3c20184b1f0f423149f775983a76d9f7", "testCaseId": "3c20184b1f0f423149f775983a76d9f7", "fullName": "tests.test_bank_operations.TestBankOperations#test_bank_operations", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_pages')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_bank_operations"}, {"name": "subSuite", "value": "TestBankOperations"}, {"name": "host", "value": "Selenium"}, {"name": "thread", "value": "4708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_bank_operations"}]}