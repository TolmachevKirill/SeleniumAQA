{"name": "test_bank_operations", "status": "broken", "statusDetails": {"message": "ValueError: Timeout value connect was <object object at 0x000001F1B0B78A00>, but it must be an int, float or None.", "trace": "request = <SubRequest 'driver' for <Function test_bank_operations>>\n\n    @pytest.fixture(scope=\"session\")\n    def driver(request):\n        # Здесь указывается адрес Selenium GRID\n        grid_url = \"http://localhost:4444\"\n    \n        # Настройка Capabilities для браузера, например Chrome\n        capabilities = DesiredCapabilities.CHROME\n    \n        # Создание экземпляра драйвера, подключенного к Selenium GRID\n>       driver = webdriver.Remote(command_executor=grid_url, desired_capabilities=capabilities)\n\nconftest.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:374: in execute\n    return self._request(command_info[0], url, body=data)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:402: in _request\n    resp = http.request(method, url, body=body, headers=headers)\n..\\.venv\\Lib\\site-packages\\urllib3\\_request_methods.py:144: in request\n    return self.request_encode_body(\n..\\.venv\\Lib\\site-packages\\urllib3\\_request_methods.py:279: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n..\\.venv\\Lib\\site-packages\\urllib3\\poolmanager.py:433: in urlopen\n    conn = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)\n..\\.venv\\Lib\\site-packages\\urllib3\\poolmanager.py:304: in connection_from_host\n    return self.connection_from_context(request_context)\n..\\.venv\\Lib\\site-packages\\urllib3\\poolmanager.py:329: in connection_from_context\n    return self.connection_from_pool_key(pool_key, request_context=request_context)\n..\\.venv\\Lib\\site-packages\\urllib3\\poolmanager.py:352: in connection_from_pool_key\n    pool = self._new_pool(scheme, host, port, request_context=request_context)\n..\\.venv\\Lib\\site-packages\\urllib3\\poolmanager.py:266: in _new_pool\n    return pool_cls(host, port, **request_context)\n..\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py:196: in __init__\n    timeout = Timeout.from_float(timeout)\n..\\.venv\\Lib\\site-packages\\urllib3\\util\\timeout.py:186: in from_float\n    return Timeout(read=timeout, connect=timeout)\n..\\.venv\\Lib\\site-packages\\urllib3\\util\\timeout.py:115: in __init__\n    self._connect = self._validate_timeout(connect, \"connect\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'urllib3.util.timeout.Timeout'>\nvalue = <object object at 0x000001F1B0B78A00>, name = 'connect'\n\n    @classmethod\n    def _validate_timeout(cls, value: _TYPE_TIMEOUT, name: str) -> _TYPE_TIMEOUT:\n        \"\"\"Check that a timeout attribute is valid.\n    \n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        \"\"\"\n        if value is None or value is _DEFAULT_TIMEOUT:\n            return value\n    \n        if isinstance(value, bool):\n            raise ValueError(\n                \"Timeout cannot be a boolean value. It must \"\n                \"be an int, float or None.\"\n            )\n        try:\n            float(value)\n        except (TypeError, ValueError):\n>           raise ValueError(\n                \"Timeout value %s was %s, but it must be an \"\n                \"int, float or None.\" % (name, value)\n            ) from None\nE           ValueError: Timeout value connect was <object object at 0x000001F1B0B78A00>, but it must be an int, float or None.\n\n..\\.venv\\Lib\\site-packages\\urllib3\\util\\timeout.py:152: ValueError"}, "start": 1715180374972, "stop": 1715180374972, "uuid": "907fee80-a302-4fcd-9143-255a1d781401", "historyId": "1108a26bf264a5a7e47d686ec523280c", "testCaseId": "3c20184b1f0f423149f775983a76d9f7", "fullName": "tests.test_bank_operations.TestBankOperations#test_bank_operations", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_bank_operations"}, {"name": "subSuite", "value": "TestBankOperations"}, {"name": "host", "value": "Selenium"}, {"name": "thread", "value": "1800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_bank_operations"}]}