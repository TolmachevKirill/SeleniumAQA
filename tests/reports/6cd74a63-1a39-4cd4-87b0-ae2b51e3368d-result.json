{"name": "test_bank_operations", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF76B411562+60802]\n\t(No symbol) [0x00007FF76B38AC62]\n\t(No symbol) [0x00007FF76B247CE4]\n\t(No symbol) [0x00007FF76B296D4D]\n\t(No symbol) [0x00007FF76B296E1C]\n\t(No symbol) [0x00007FF76B2DCE37]\n\t(No symbol) [0x00007FF76B2BABBF]\n\t(No symbol) [0x00007FF76B2DA224]\n\t(No symbol) [0x00007FF76B2BA923]\n\t(No symbol) [0x00007FF76B288FEC]\n\t(No symbol) [0x00007FF76B289C21]\n\tGetHandleVerifier [0x00007FF76B7141FD+3217949]\n\tGetHandleVerifier [0x00007FF76B756197+3488183]\n\tGetHandleVerifier [0x00007FF76B74F11F+3459391]\n\tGetHandleVerifier [0x00007FF76B4CB926+823622]\n\t(No symbol) [0x00007FF76B395FFF]\n\t(No symbol) [0x00007FF76B390F24]\n\t(No symbol) [0x00007FF76B3910B2]\n\t(No symbol) [0x00007FF76B381904]\n\tBaseThreadInitThunk [0x00007FFB60BE7344+20]\n\tRtlUserThreadStart [0x00007FFB62BC26B1+33]", "trace": "self = <tests.test_bank_operations.TestBankOperations object at 0x00000192A3705CA0>\nsetup_pages = (<pages.login_page.LoginPage object at 0x00000192A12A2390>, <pages.account_page.AccountPage object at 0x00000192A12A1A30>, <pages.transactions_page.TransactionsPage object at 0x00000192A11D6C30>)\n\n    def test_bank_operations(self, setup_pages):\n        login_page, account_page, transactions_page = setup_pages\n    \n        # Авторизация пользователя \"Harry Potter\"\n        login_page.login_as_user(\"Harry Potter\")\n    \n        # Вычисление N-го числа Фибоначчи\n        fib_number = calculate_fibonacci(date.today().day + 1)\n    \n        # Пополнение счета на сумму, равную N-му числу Фибоначчи\n        account_page.deposit(fib_number)\n    \n        # Списание со счета на ту же сумму\n        account_page.withdraw(fib_number)\n    \n        # Проверка баланса - должен быть равен 0\n>       balance = account_page.get_balance()\n\ntest_bank_operations.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\account_page.py:41: in get_balance\n    return self.get_element_text(self.balance_label)\n..\\pages\\base_page.py:83: in get_element_text\n    element = WebDriverWait(self.driver, self.timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f55eba1ef2a077211b742576493420ba\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000192A3709940>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF76B411562+60802]\nE       \t(No symbol) [0x00007FF76B38AC62]\nE       \t(No symbol) [0x00007FF76B247CE4]\nE       \t(No symbol) [0x00007FF76B296D4D]\nE       \t(No symbol) [0x00007FF76B296E1C]\nE       \t(No symbol) [0x00007FF76B2DCE37]\nE       \t(No symbol) [0x00007FF76B2BABBF]\nE       \t(No symbol) [0x00007FF76B2DA224]\nE       \t(No symbol) [0x00007FF76B2BA923]\nE       \t(No symbol) [0x00007FF76B288FEC]\nE       \t(No symbol) [0x00007FF76B289C21]\nE       \tGetHandleVerifier [0x00007FF76B7141FD+3217949]\nE       \tGetHandleVerifier [0x00007FF76B756197+3488183]\nE       \tGetHandleVerifier [0x00007FF76B74F11F+3459391]\nE       \tGetHandleVerifier [0x00007FF76B4CB926+823622]\nE       \t(No symbol) [0x00007FF76B395FFF]\nE       \t(No symbol) [0x00007FF76B390F24]\nE       \t(No symbol) [0x00007FF76B3910B2]\nE       \t(No symbol) [0x00007FF76B381904]\nE       \tBaseThreadInitThunk [0x00007FFB60BE7344+20]\nE       \tRtlUserThreadStart [0x00007FFB62BC26B1+33]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "66adbf7e-5793-42f7-bf4e-399f678e261a-attachment.txt", "type": "text/plain"}], "start": 1715353019315, "stop": 1715353072256, "uuid": "102ed1df-6301-4dcf-bd3e-441346c88243", "historyId": "3c20184b1f0f423149f775983a76d9f7", "testCaseId": "3c20184b1f0f423149f775983a76d9f7", "fullName": "tests.test_bank_operations.TestBankOperations#test_bank_operations", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_pages')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_bank_operations"}, {"name": "subSuite", "value": "TestBankOperations"}, {"name": "host", "value": "Selenium"}, {"name": "thread", "value": "3416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_bank_operations"}]}